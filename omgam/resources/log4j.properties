# Output pattern : date [thread] priority category - message
log4j.rootLogger=WARN, Console, RollingFile

#Console
log4j.logger.com.cpt=INFO
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d{MM-dd HH:mm:ss} %-5p %c - %20m%n

#每天输出文件
log4j.appender.RollingFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.RollingFile.Threshold=INFO
##在项目WEB-INF目录下生成日志文件夹和日志文件
#log4j.appender.RollingFile.File=${project}WEB-INF/logs/sys.
##在系统盘的根路径生成对应的日志文件夹和日志文件
log4j.appender.RollingFile.File=/omgam_log/omgam.
##根据server环境变量生成对应的日志文件夹和日志文件
#log4j.appender.RollingFile.File=${catalina.base}/logs/logs
log4j.appender.RollingFile.DatePattern =yyyy-MM-dd'.log'
log4j.appender.RollingFile.layout=org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c  -%l - %.30m%n

#框架信息
#log4j.logger.org.apache=INFO
log4j.category.org.springframework=INFO
log4j.category.org.hibernate=INFO
#log4j.logger.hibernate.cache=debug



#####################TestDATABASE##################################

# Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。

# 用于数据库
#log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.DATABASE.URL=jdbc:sqlserver://localhost:1433;DatabaseName=SCOTT
#log4j.appender.DATABASE.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#log4j.appender.DATABASE.user=scott
#log4j.appender.DATABASE.password=ppmsdba

# 本处设置为"WARN"以上级别在数据库存储(默认情况使用rootLogger中的设置)
#log4j.appender.DATABASE.Threshold=DEBUG
#log4j.appender.DATABASE.sql=INSERT INTO EVN_LOG(optime,thread,infolevel,class,message) VALUES ('%d{yyyy-MM-dd HH:mm:ss}', '%t', '%p', '%l', '%m')
# 写入数据库中的表LOG4J的Message字段中，
# 内容％d（日期）%c: 日志信息所在地（类名）%p: 日志信息级别%m: 产生的日志具体信息 %n: 输出日志信息换行
#log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n

